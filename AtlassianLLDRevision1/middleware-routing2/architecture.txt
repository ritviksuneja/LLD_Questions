Question 2)	Middleware Router
a)	We want to implement a middleware router for our web service, which based on the path returns different strings
Our interface for the router looks something like:

Interface Router {
Fun addRoute(path: String, result: String) : Unit;
Fun callRoute(path:String) :String;
}

Usage:
Router.addRoute(“/bar” , “result)
Router.callRoute(“/bar”) -> “result”
5:17

Questions to ask:
1 path will have only 1 result
The paths are case sensitive

RouterImpl

Router:
    -routeMap: Map<String, String> // <path, result>
    +addRoute(path: String, result: String) : void;
    +callRoute(path: String) : String;

Exceptions:
RouteNotFoundException
IllegalArgumentException

Now let's add a trienode

TrieNode:
    -children: Map<String, TrieNode>
    -result: String
    +hasChild(segment: String): boolean
    +addChild(segment: String): void
    +getResult(): String
    +addResult(result: String): void
    +getChild(segment: String): TrieNode
    +constructor()

RouterImplWildcard:
    -root: TrieNode
    +addRoute(path: String, result: String): void
    +callRoute(path: String): String


